"use strict";(self.webpackChunkmy_docs_site=self.webpackChunkmy_docs_site||[]).push([[803],{23:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"installation","title":"Installation Guide","description":"Prerequisites","source":"@site/docs/installation.md","sourceDirName":".","slug":"/installation","permalink":"/docs/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/yukino-org/yukino/tree/main/docs/docs/installation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/intro"},"next":{"title":"Quick Start Guide","permalink":"/docs/quickstart"}}');var s=r(4848),a=r(8453);const l={},t="Installation Guide",o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing Yukino",id:"installing-yukino",level:2},{value:"Using npm",id:"using-npm",level:3},{value:"Using yarn",id:"using-yarn",level:3},{value:"Using pnpm",id:"using-pnpm",level:3},{value:"Setting Up Lavalink",id:"setting-up-lavalink",level:2},{value:"1. Download Lavalink",id:"1-download-lavalink",level:3},{value:"2. Create Configuration",id:"2-create-configuration",level:3},{value:"3. Start Lavalink",id:"3-start-lavalink",level:3},{value:"Windows (start.bat)",id:"windows-startbat",level:4},{value:"Linux/macOS (start.sh)",id:"linuxmacos-startsh",level:4},{value:"4. Configure Your Bot",id:"4-configure-your-bot",level:3},{value:"Development Setup",id:"development-setup",level:2},{value:"1. Project Structure",id:"1-project-structure",level:3},{value:"2. TypeScript Configuration",id:"2-typescript-configuration",level:3},{value:"3. Package Configuration",id:"3-package-configuration",level:3},{value:"Production Setup",id:"production-setup",level:2},{value:"1. Docker Setup",id:"1-docker-setup",level:3},{value:"2. Process Management",id:"2-process-management",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Mode",id:"debug-mode",level:3},{value:"Health Check",id:"health-check",level:3}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"installation-guide",children:"Installation Guide"})}),"\n",(0,s.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(e.p,{children:"Before installing Yukino, ensure you have:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Node.js"})," version 16.x or higher"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Java"})," version 17 or higher (for Lavalink)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Discord Bot Token"})," with these privileged intents:","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"GUILDS"}),"\n",(0,s.jsx)(e.li,{children:"GUILD_VOICE_STATES"}),"\n",(0,s.jsx)(e.li,{children:"GUILD_MESSAGES"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"installing-yukino",children:"Installing Yukino"}),"\n",(0,s.jsx)(e.h3,{id:"using-npm",children:"Using npm"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"npm install yukino discord.js\n"})}),"\n",(0,s.jsx)(e.h3,{id:"using-yarn",children:"Using yarn"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"yarn add yukino discord.js\n"})}),"\n",(0,s.jsx)(e.h3,{id:"using-pnpm",children:"Using pnpm"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"pnpm add yukino discord.js\n"})}),"\n",(0,s.jsx)(e.h2,{id:"setting-up-lavalink",children:"Setting Up Lavalink"}),"\n",(0,s.jsx)(e.h3,{id:"1-download-lavalink",children:"1. Download Lavalink"}),"\n",(0,s.jsx)(e.p,{children:"Download the latest Lavalink.jar from:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/lavalink-devs/Lavalink/releases",children:"Official Lavalink Releases"})}),"\n",(0,s.jsxs)(e.li,{children:["Or use the direct link to the latest version: ",(0,s.jsx)(e.a,{href:"https://github.com/lavalink-devs/Lavalink/releases/latest/download/Lavalink.jar",children:"Lavalink.jar"})]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"2-create-configuration",children:"2. Create Configuration"}),"\n",(0,s.jsxs)(e.p,{children:["Create ",(0,s.jsx)(e.code,{children:"application.yml"})," in the same directory as Lavalink.jar:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'server:\r\n  port: 2333\r\n  address: 0.0.0.0\r\nlavalink:\r\n  server:\r\n    password: "youshallnotpass"\r\n    sources:\r\n      youtube: true\r\n      bandcamp: true\r\n      soundcloud: true\r\n      twitch: true\r\n      vimeo: true\r\n      http: true\r\n      local: false\r\n    bufferDurationMs: 400\r\n    frameBufferDurationMs: 1000\r\n    youtubePlaylistLoadLimit: 6\r\n    playerUpdateInterval: 5\r\n    youtubeSearchEnabled: true\r\n    soundcloudSearchEnabled: true\r\n    gc-warnings: true\r\n\r\nmetrics:\r\n  prometheus:\r\n    enabled: false\r\n    endpoint: /metrics\r\n\r\nsentry:\r\n  dsn: ""\r\n  environment: ""\r\n\r\nlogging:\r\n  file:\r\n    max-history: 30\r\n    max-size: 1GB\r\n  path: ./logs/\r\n\r\n  level:\r\n    root: INFO\r\n    lavalink: INFO\n'})}),"\n",(0,s.jsx)(e.h3,{id:"3-start-lavalink",children:"3. Start Lavalink"}),"\n",(0,s.jsx)(e.p,{children:"Create a startup script:"}),"\n",(0,s.jsx)(e.h4,{id:"windows-startbat",children:"Windows (start.bat)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-batch",children:"java -jar Lavalink.jar\n"})}),"\n",(0,s.jsx)(e.h4,{id:"linuxmacos-startsh",children:"Linux/macOS (start.sh)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"#!/bin/bash\r\njava -jar Lavalink.jar\n"})}),"\n",(0,s.jsx)(e.p,{children:"Make the script executable on Linux/macOS:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"chmod +x start.sh\n"})}),"\n",(0,s.jsx)(e.h3,{id:"4-configure-your-bot",children:"4. Configure Your Bot"}),"\n",(0,s.jsx)(e.p,{children:"Basic setup with TypeScript:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import { Client, GatewayIntentBits } from 'discord.js';\r\nimport { YukinoClient } from 'yukino';\r\n\r\n// Create Discord.js client\r\nconst client = new Client({\r\n  intents: [\r\n    GatewayIntentBits.Guilds,\r\n    GatewayIntentBits.GuildVoiceStates,\r\n    GatewayIntentBits.GuildMessages,\r\n    GatewayIntentBits.MessageContent\r\n  ]\r\n});\r\n\r\n// Create Yukino client\r\nconst yukino = new YukinoClient(client, {\r\n  client: client,\r\n  auth: 'youshallnotpass', // Must match Lavalink password\r\n  debug: true // Enable for detailed logging\r\n}, {\r\n  name: 'default',\r\n  url: 'localhost:2333',\r\n  auth: 'youshallnotpass',\r\n  secure: false, // Use true for HTTPS\r\n  version: '4' // Lavalink API version\r\n});\r\n\r\n// Connect when bot is ready\r\nclient.once('ready', () => {\r\n  console.log('Bot is ready!');\r\n  yukino.connect();\r\n});\r\n\r\n// Login to Discord\r\nclient.login('YOUR_BOT_TOKEN');\n"})}),"\n",(0,s.jsx)(e.h2,{id:"development-setup",children:"Development Setup"}),"\n",(0,s.jsx)(e.h3,{id:"1-project-structure",children:"1. Project Structure"}),"\n",(0,s.jsx)(e.p,{children:"Recommended project structure:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"your-bot/\r\n\u251c\u2500\u2500 src/\r\n\u2502   \u251c\u2500\u2500 index.ts\r\n\u2502   \u251c\u2500\u2500 commands/\r\n\u2502   \u2502   \u2514\u2500\u2500 music/\r\n\u2502   \u251c\u2500\u2500 events/\r\n\u2502   \u2502   \u2514\u2500\u2500 voice/\r\n\u2502   \u2514\u2500\u2500 utils/\r\n\u251c\u2500\u2500 lavalink/\r\n\u2502   \u251c\u2500\u2500 Lavalink.jar\r\n\u2502   \u2514\u2500\u2500 application.yml\r\n\u251c\u2500\u2500 package.json\r\n\u2514\u2500\u2500 tsconfig.json\n"})}),"\n",(0,s.jsx)(e.h3,{id:"2-typescript-configuration",children:"2. TypeScript Configuration"}),"\n",(0,s.jsxs)(e.p,{children:["Create ",(0,s.jsx)(e.code,{children:"tsconfig.json"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "compilerOptions": {\r\n    "target": "ES2020",\r\n    "module": "commonjs",\r\n    "strict": true,\r\n    "esModuleInterop": true,\r\n    "skipLibCheck": true,\r\n    "forceConsistentCasingInFileNames": true,\r\n    "outDir": "dist",\r\n    "rootDir": "src"\r\n  },\r\n  "include": ["src"],\r\n  "exclude": ["node_modules"]\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"3-package-configuration",children:"3. Package Configuration"}),"\n",(0,s.jsxs)(e.p,{children:["Update your ",(0,s.jsx)(e.code,{children:"package.json"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "name": "your-bot",\r\n  "version": "1.0.0",\r\n  "scripts": {\r\n    "start": "node dist/index.js",\r\n    "dev": "ts-node src/index.ts",\r\n    "build": "tsc",\r\n    "lavalink": "cd lavalink && java -jar Lavalink.jar"\r\n  },\r\n  "dependencies": {\r\n    "discord.js": "^14.0.0",\r\n    "yukino": "^1.0.0"\r\n  },\r\n  "devDependencies": {\r\n    "typescript": "^4.9.0",\r\n    "ts-node": "^10.9.0",\r\n    "@types/node": "^18.0.0"\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"production-setup",children:"Production Setup"}),"\n",(0,s.jsx)(e.h3,{id:"1-docker-setup",children:"1. Docker Setup"}),"\n",(0,s.jsxs)(e.p,{children:["Create a ",(0,s.jsx)(e.code,{children:"Dockerfile"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dockerfile",children:'FROM node:16-alpine\r\n\r\nWORKDIR /app\r\n\r\nCOPY package*.json ./\r\nRUN npm install\r\n\r\nCOPY . .\r\nRUN npm run build\r\n\r\nCMD ["npm", "start"]\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Create a ",(0,s.jsx)(e.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"version: '3.8'\r\nservices:\r\n  lavalink:\r\n    image: fredboat/lavalink:latest\r\n    container_name: lavalink\r\n    restart: unless-stopped\r\n    environment:\r\n      - SERVER_PORT=2333\r\n      - SERVER_ADDRESS=0.0.0.0\r\n      - LAVALINK_SERVER_PASSWORD=youshallnotpass\r\n    volumes:\r\n      - ./lavalink/application.yml:/opt/Lavalink/application.yml\r\n    networks:\r\n      - bot-network\r\n\r\n  bot:\r\n    build: .\r\n    container_name: music-bot\r\n    restart: unless-stopped\r\n    depends_on:\r\n      - lavalink\r\n    environment:\r\n      - DISCORD_TOKEN=your-bot-token\r\n      - LAVALINK_HOST=lavalink\r\n      - LAVALINK_PORT=2333\r\n      - LAVALINK_PASSWORD=youshallnotpass\r\n    networks:\r\n      - bot-network\r\n\r\nnetworks:\r\n  bot-network:\r\n    driver: bridge\n"})}),"\n",(0,s.jsx)(e.h3,{id:"2-process-management",children:"2. Process Management"}),"\n",(0,s.jsx)(e.p,{children:"For non-Docker deployments, use PM2:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# Install PM2\r\nnpm install -g pm2\r\n\r\n# Start Lavalink\r\npm2 start "java -jar Lavalink.jar" --name "lavalink" --cwd "./lavalink"\r\n\r\n# Start bot\r\npm2 start npm --name "music-bot" -- start\r\n\r\n# Save PM2 configuration\r\npm2 save\r\n\r\n# Enable startup on system boot\r\npm2 startup\n'})}),"\n",(0,s.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(e.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Lavalink Connection Failed"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Check if Java 17+ is installed"}),"\n",(0,s.jsx)(e.li,{children:"Verify Lavalink is running (default port: 2333)"}),"\n",(0,s.jsx)(e.li,{children:"Confirm passwords match in both Lavalink and bot configs"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Voice Connection Issues"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Verify bot has required intents"}),"\n",(0,s.jsx)(e.li,{children:"Check voice channel permissions"}),"\n",(0,s.jsx)(e.li,{children:"Enable debug logging for detailed error messages"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Track Loading Failed"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Check Lavalink server logs"}),"\n",(0,s.jsx)(e.li,{children:"Verify source is enabled in application.yml"}),"\n",(0,s.jsx)(e.li,{children:"Test with direct YouTube URL first"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,s.jsx)(e.p,{children:"Enable debug mode for detailed logging:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"const yukino = new YukinoClient(client, {\r\n  // ...other options\r\n  debug: true\r\n});\n"})}),"\n",(0,s.jsx)(e.h3,{id:"health-check",children:"Health Check"}),"\n",(0,s.jsx)(e.p,{children:"Create a simple health check endpoint:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import express from 'express';\r\nconst app = express();\r\n\r\napp.get('/health', (req, res) => {\r\n  const status = {\r\n    bot: client.isReady(),\r\n    lavalink: yukino.isReady,\r\n    players: yukino.players.size\r\n  };\r\n  res.json(status);\r\n});\r\n\r\napp.listen(3000);\n"})})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>l,x:()=>t});var i=r(6540);const s={},a=i.createContext(s);function l(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);