"use strict";(self.webpackChunkmy_docs_site=self.webpackChunkmy_docs_site||[]).push([[594],{48:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api/index","title":"API Reference","description":"Yukino\'s API is organized into several main components:","source":"@site/docs/api/index.md","sourceDirName":"api","slug":"/api/","permalink":"/docs/api/","draft":false,"unlisted":false,"editUrl":"https://github.com/yukino-org/yukino/tree/main/docs/docs/api/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Error Handling","permalink":"/docs/advanced/error-handling"},"next":{"title":"YukinoClient API","permalink":"/docs/api/yukino-client"}}');var r=i(4848),t=i(8453);const l={},c="API Reference",o={},a=[{value:"Core Components",id:"core-components",level:2},{value:"YukinoClient",id:"yukinoclient",level:3},{value:"Node",id:"node",level:3},{value:"Player",id:"player",level:3},{value:"Queue",id:"queue",level:3},{value:"Rest",id:"rest",level:3},{value:"Connectors",id:"connectors",level:2},{value:"Connector",id:"connector",level:3},{value:"DiscordJSConnector",id:"discordjsconnector",level:3},{value:"Filters &amp; Effects",id:"filters--effects",level:2},{value:"FilterUtil",id:"filterutil",level:3},{value:"Types &amp; Interfaces",id:"types--interfaces",level:2},{value:"Events",id:"events",level:3},{value:"LoadTypes",id:"loadtypes",level:3},{value:"State",id:"state",level:3},{value:"PlayerStates",id:"playerstates",level:3},{value:"Configuration Interfaces",id:"configuration-interfaces",level:3},{value:"Filter Interfaces",id:"filter-interfaces",level:3},{value:"Track Related",id:"track-related",level:3},{value:"Utility Types",id:"utility-types",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,r.jsx)(n.p,{children:"Yukino's API is organized into several main components:"}),"\n",(0,r.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,r.jsx)(n.h3,{id:"yukinoclient",children:(0,r.jsx)(n.a,{href:"/docs/api/yukino-client",children:"YukinoClient"})}),"\n",(0,r.jsx)(n.p,{children:"The main client class that handles connection to Lavalink and player management."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { YukinoClient } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"node",children:(0,r.jsx)(n.a,{href:"/docs/core/node",children:"Node"})}),"\n",(0,r.jsx)(n.p,{children:"Manages the WebSocket connection to Lavalink and handles events."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Node } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"player",children:(0,r.jsx)(n.a,{href:"/docs/core/player",children:"Player"})}),"\n",(0,r.jsx)(n.p,{children:"Handles playback control and audio manipulation for a guild."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Player } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"queue",children:(0,r.jsx)(n.a,{href:"/docs/core/queue",children:"Queue"})}),"\n",(0,r.jsx)(n.p,{children:"Manages track queues for players."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Queue } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rest",children:(0,r.jsx)(n.a,{href:"/docs/api/rest",children:"Rest"})}),"\n",(0,r.jsx)(n.p,{children:"Handles HTTP communication with the Lavalink server."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Rest } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h2,{id:"connectors",children:"Connectors"}),"\n",(0,r.jsx)(n.h3,{id:"connector",children:(0,r.jsx)(n.a,{href:"/docs/api/connectors#base-connector",children:"Connector"})}),"\n",(0,r.jsx)(n.p,{children:"Base class for platform-specific connectors."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Connector } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"discordjsconnector",children:(0,r.jsx)(n.a,{href:"/docs/api/connectors#discordjs-connector",children:"DiscordJSConnector"})}),"\n",(0,r.jsx)(n.p,{children:"Discord.js-specific implementation."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { DiscordJSConnector } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h2,{id:"filters--effects",children:"Filters & Effects"}),"\n",(0,r.jsx)(n.h3,{id:"filterutil",children:(0,r.jsx)(n.a,{href:"/docs/features/filters",children:"FilterUtil"})}),"\n",(0,r.jsx)(n.p,{children:"Utility class for audio filters and effects."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { FilterUtil } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h2,{id:"types--interfaces",children:"Types & Interfaces"}),"\n",(0,r.jsx)(n.h3,{id:"events",children:(0,r.jsx)(n.a,{href:"/docs/api/types#events",children:"Events"})}),"\n",(0,r.jsx)(n.p,{children:"Event constants used throughout the library."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Events } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"loadtypes",children:(0,r.jsx)(n.a,{href:"/docs/api/types#load-types",children:"LoadTypes"})}),"\n",(0,r.jsx)(n.p,{children:"Track loading result types."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { LoadTypes } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"state",children:(0,r.jsx)(n.a,{href:"/docs/api/types#state",children:"State"})}),"\n",(0,r.jsx)(n.p,{children:"Connection state constants."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { State } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"playerstates",children:(0,r.jsx)(n.a,{href:"/docs/api/types#player-states",children:"PlayerStates"})}),"\n",(0,r.jsx)(n.p,{children:"Player state constants."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { PlayerStates } from 'yukino';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"configuration-interfaces",children:"Configuration Interfaces"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#connector-options",children:"ConnectorOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#node-options",children:"NodeOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#player-options",children:"PlayerOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#queue-options",children:"QueueOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#rest-options",children:"RestOptions"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"filter-interfaces",children:"Filter Interfaces"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#filter-options",children:"FilterOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#equalizer-band",children:"EqualizerBand"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#karaoke-options",children:"KaraokeOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#timescale-options",children:"TimescaleOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#frequency-depth-options",children:"FrequencyDepthOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#rotation-options",children:"RotationOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#distortion-options",children:"DistortionOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#channel-mix-options",children:"ChannelMixOptions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#low-pass-options",children:"LowPassOptions"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"track-related",children:"Track Related"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#track",children:"Track"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#track-info",children:"TrackInfo"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#load-track-response",children:"LoadTrackResponse"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"utility-types",children:"Utility Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#lavalink-event",children:"LavalinkEvent"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/api/types#node-stats",children:"NodeStats"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);