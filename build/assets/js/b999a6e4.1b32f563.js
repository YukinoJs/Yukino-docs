"use strict";(self.webpackChunkmy_docs_site=self.webpackChunkmy_docs_site||[]).push([[212],{2161:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api/types","title":"Types Reference","description":"Constants","source":"@site/docs/api/types.md","sourceDirName":"api","slug":"/api/types","permalink":"/docs/api/types","draft":false,"unlisted":false,"editUrl":"https://github.com/yukino-org/yukino/tree/main/docs/docs/api/types.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Connectors","permalink":"/docs/api/connectors"}}');var s=r(4848),i=r(8453);const a={},o="Types Reference",l={},c=[{value:"Constants",id:"constants",level:2},{value:"Events",id:"events",level:3},{value:"LoadTypes",id:"loadtypes",level:3},{value:"State",id:"state",level:3},{value:"PlayerStates",id:"playerstates",level:3},{value:"Configuration Interfaces",id:"configuration-interfaces",level:2},{value:"ConnectorOptions",id:"connectoroptions",level:3},{value:"NodeOptions",id:"nodeoptions",level:3},{value:"PlayerOptions",id:"playeroptions",level:3},{value:"QueueOptions",id:"queueoptions",level:3},{value:"RestOptions",id:"restoptions",level:3},{value:"Filter Interfaces",id:"filter-interfaces",level:2},{value:"FilterOptions",id:"filteroptions",level:3},{value:"EqualizerBand",id:"equalizerband",level:3},{value:"KaraokeOptions",id:"karaokeoptions",level:3},{value:"TimescaleOptions",id:"timescaleoptions",level:3},{value:"FrequencyDepthOptions",id:"frequencydepthoptions",level:3},{value:"RotationOptions",id:"rotationoptions",level:3},{value:"DistortionOptions",id:"distortionoptions",level:3},{value:"ChannelMixOptions",id:"channelmixoptions",level:3},{value:"LowPassOptions",id:"lowpassoptions",level:3},{value:"Track Related Types",id:"track-related-types",level:2},{value:"Track",id:"track",level:3},{value:"TrackInfo",id:"trackinfo",level:3},{value:"LoadTrackResponse",id:"loadtrackresponse",level:3},{value:"Event Types",id:"event-types",level:2},{value:"LavalinkEvent",id:"lavalinkevent",level:3},{value:"NodeStats",id:"nodestats",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"types-reference",children:"Types Reference"})}),"\n",(0,s.jsx)(n.h2,{id:"constants",children:"Constants"}),"\n",(0,s.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"enum Events {\r\n  // Node events\r\n  NODE_READY = 'nodeReady',\r\n  NODE_ERROR = 'nodeError',\r\n  NODE_CLOSED = 'nodeClosed',\r\n  NODE_RECONNECT = 'nodeReconnect',\r\n  NODE_STATS = 'nodeStats',\r\n  NODE_EVENT = 'nodeEvent',\r\n\r\n  // Player events\r\n  PLAYER_CREATE = 'playerCreate',\r\n  PLAYER_DESTROY = 'playerDestroy',\r\n  PLAYER_UPDATE = 'playerUpdate',\r\n  \r\n  // Track events\r\n  TRACK_START = 'trackStart',\r\n  TRACK_END = 'trackEnd',\r\n  TRACK_ERROR = 'trackError',\r\n  TRACK_STUCK = 'trackStuck',\r\n  \r\n  // Voice events\r\n  VOICE_CONNECTED = 'voiceConnected',\r\n  VOICE_DISCONNECTED = 'voiceDisconnected',\r\n  VOICE_STATE_UPDATE = 'voiceStateUpdate',\r\n  VOICE_SERVER_UPDATE = 'voiceServerUpdate',\r\n  \r\n  // WebSocket events\r\n  WS_CLOSED = 'wsClosed',\r\n  WS_ERROR = 'wsError',\r\n  WS_OPEN = 'wsOpen'\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"loadtypes",children:"LoadTypes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"enum LoadTypes {\r\n  TRACK_LOADED = 'track',\r\n  PLAYLIST_LOADED = 'playlist',\r\n  SEARCH_RESULT = 'search',\r\n  NO_MATCHES = 'empty',\r\n  LOAD_FAILED = 'error'\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"state",children:"State"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"enum State {\r\n  CONNECTING = 0,\r\n  CONNECTED = 1,\r\n  DISCONNECTING = 2,\r\n  DISCONNECTED = 3,\r\n  RECONNECTING = 4\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"playerstates",children:"PlayerStates"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"enum PlayerStates {\r\n  PLAYING = 'playing',\r\n  PAUSED = 'paused',\r\n  IDLE = 'idle'\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-interfaces",children:"Configuration Interfaces"}),"\n",(0,s.jsx)(n.h3,{id:"connectoroptions",children:"ConnectorOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ConnectorOptions {\r\n  client: Client;\r\n  name?: string;\r\n  host?: string;\r\n  port?: number | string;\r\n  url?: string;\r\n  auth: string;\r\n  secure?: boolean;\r\n  version?: string;\r\n  sessionId?: string;\r\n  debug?: boolean;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"nodeoptions",children:"NodeOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface NodeOptions {\r\n  name: string;\r\n  url: string;\r\n  auth: string;\r\n  secure?: boolean;\r\n  group?: string;\r\n  reconnectInterval?: number;\r\n  reconnectTries?: number;\r\n  resumeKey?: string | null;\r\n  resumeTimeout?: number;\r\n  version?: string;\r\n  debug?: boolean;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"playeroptions",children:"PlayerOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface PlayerOptions {\r\n  guildId: string;\r\n  textChannelId?: string;\r\n  voiceChannelId: string;\r\n  deaf?: boolean;\r\n  mute?: boolean;\r\n  volume?: number;\r\n  queueOptions?: QueueOptions;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"queueoptions",children:"QueueOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'interface QueueOptions {\r\n  maxSize?: number;\r\n  defaultVolume?: number;\r\n  durationType?: "ms" | "s";\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"restoptions",children:"RestOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface RestOptions {\r\n  url: string;\r\n  auth: string;\r\n  secure?: boolean;\r\n  timeout?: number;\r\n  version?: string;\r\n  debug?: boolean;\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"filter-interfaces",children:"Filter Interfaces"}),"\n",(0,s.jsx)(n.h3,{id:"filteroptions",children:"FilterOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface FilterOptions {\r\n  volume?: number;\r\n  equalizer?: EqualizerBand[];\r\n  karaoke?: KaraokeOptions;\r\n  timescale?: TimescaleOptions;\r\n  tremolo?: FrequencyDepthOptions;\r\n  vibrato?: FrequencyDepthOptions;\r\n  rotation?: RotationOptions;\r\n  distortion?: DistortionOptions;\r\n  channelMix?: ChannelMixOptions;\r\n  lowPass?: LowPassOptions;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"equalizerband",children:"EqualizerBand"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface EqualizerBand {\r\n  band: number;\r\n  gain: number;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"karaokeoptions",children:"KaraokeOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface KaraokeOptions {\r\n  level?: number;\r\n  monoLevel?: number;\r\n  filterBand?: number;\r\n  filterWidth?: number;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"timescaleoptions",children:"TimescaleOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface TimescaleOptions {\r\n  speed?: number;\r\n  pitch?: number;\r\n  rate?: number;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"frequencydepthoptions",children:"FrequencyDepthOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface FrequencyDepthOptions {\r\n  frequency?: number;\r\n  depth?: number;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"rotationoptions",children:"RotationOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface RotationOptions {\r\n  rotationHz?: number;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"distortionoptions",children:"DistortionOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface DistortionOptions {\r\n  sinOffset?: number;\r\n  sinScale?: number;\r\n  cosOffset?: number;\r\n  cosScale?: number;\r\n  tanOffset?: number;\r\n  tanScale?: number;\r\n  offset?: number;\r\n  scale?: number;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"channelmixoptions",children:"ChannelMixOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ChannelMixOptions {\r\n  leftToLeft?: number;\r\n  leftToRight?: number;\r\n  rightToLeft?: number;\r\n  rightToRight?: number;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"lowpassoptions",children:"LowPassOptions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface LowPassOptions {\r\n  smoothing?: number;\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"track-related-types",children:"Track Related Types"}),"\n",(0,s.jsx)(n.h3,{id:"track",children:"Track"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface Track {\r\n  encoded: string;\r\n  info: TrackInfo;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"trackinfo",children:"TrackInfo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface TrackInfo {\r\n  identifier: string;\r\n  isSeekable: boolean;\r\n  author: string;\r\n  length: number;\r\n  isStream: boolean;\r\n  position: number;\r\n  title: string;\r\n  uri?: string;\r\n  artworkUrl?: string | null;\r\n  sourceName?: string;\r\n  requester?: string;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"loadtrackresponse",children:"LoadTrackResponse"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface LoadTrackResponse {\r\n  loadType: string;\r\n  data: Track[] | null;\r\n  playlistInfo?: {\r\n    name: string;\r\n    selectedTrack?: number;\r\n  };\r\n  exception?: {\r\n    message: string;\r\n    severity: string;\r\n  };\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"event-types",children:"Event Types"}),"\n",(0,s.jsx)(n.h3,{id:"lavalinkevent",children:"LavalinkEvent"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface LavalinkEvent {\r\n  op: string;\r\n  type?: string;\r\n  guildId: string;\r\n  [key: string]: any;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"nodestats",children:"NodeStats"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface NodeStats {\r\n  players: number;\r\n  playingPlayers: number;\r\n  uptime: number;\r\n  memory: {\r\n    free: number;\r\n    used: number;\r\n    allocated: number;\r\n    reservable: number;\r\n  };\r\n  cpu: {\r\n    cores: number;\r\n    systemLoad: number;\r\n    lavalinkLoad: number;\r\n  };\r\n  frameStats?: {\r\n    sent: number;\r\n    nulled: number;\r\n    deficit: number;\r\n  };\r\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(6540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);